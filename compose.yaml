services:

  redis:
    image: redis:latest
    ports:
      - 6379:6379

  db:
    image: postgres:16
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${DB_USER} -d ${DB_NAME}'"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    # volumes:
      # - app-volume:/usr/db
    ports:
      - 5432:5432

  auth-service:
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    build: ./miku-notes-auth
    healthcheck:
      test: bash -c 'if [ "$$(curl --fail --http2-prior-knowledge -w ''%{http_code}'' http://localhost:${AUTH_SERVICE_PORT})" == "415" ]; then exit 0; else exit 1; fi'
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    environment:
      ENV: ${AUTH_SERVICE_ENV}

      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DBNAME: ${DB_NAME}
      POSTGRES_SSLMODE: disable

      TOKENS_ACCESS_TTL: ${ACCESS_TOKEN_TTL}s
      TOKENS_REFRESH_TTL: ${REFRESH_TOKEN_TTL}s
      TOKENS_REDIS_ADDR: redis:6379
      TOKENS_SECRET: ${AUTH_SERVICE_SECRET}

      GRPC_CONNECTION_TOKEN: ${AUTH_SERVICE_TOKEN}
      GRPC_PORT: ${AUTH_SERVICE_PORT}
    ports:
      - ${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}

  data-service:
    depends_on:
      auth-service:
        condition: service_healthy
    build:
      context: ./miku-notes-data
      args:
        - SERVICE_PORT=${DATA_SERVICE_PORT}
    healthcheck:
      test: curl --fail --http2-prior-knowledge http://localhost:${DATA_SERVICE_PORT} || exit 1
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    environment:
      DATABASE_URL: postgres://${DB_USER}:${DB_PASS}@db:5432/${DB_NAME}?schema=public
      SERVICE_PORT: ${DATA_SERVICE_PORT}
      SERVICE_TOKEN: ${DATA_SERVICE_TOKEN}
      MAX_FILE_CHUNK_SIZE: ${MAX_FILE_CHUNK_SIZE}
    # volumes:
    #   - app-volume:/usr/files
    ports:
      - ${DATA_SERVICE_PORT}:${DATA_SERVICE_PORT}

  gateway-service:
    depends_on:
      data-service:
        condition: service_healthy
    build: ./miku-notes-gateway
    environment:
      LOG_LEVEL: ${GATEWAY_SERVICE_LOG_LEVEL}
      SERVICE_PORT: ${GATEWAY_SERVICE_PORT}
      FRONTEND_URL: ${FRONTEND_URL}
      MAX_REQUEST_BODY_SIZE: ${MAX_REQUEST_BODY_SIZE}
      MAX_FILE_CHUNK_SIZE: ${MAX_FILE_CHUNK_SIZE}

      AUTH_URL: http://auth-service:${AUTH_SERVICE_PORT}
      DATA_URL: http://data-service:${DATA_SERVICE_PORT}
      AUTH_TOKEN: ${AUTH_SERVICE_TOKEN}
      DATA_TOKEN: ${DATA_SERVICE_TOKEN}

      ACCESS_TOKEN_TTL: ${ACCESS_TOKEN_TTL}
      REFRESH_TOKEN_TTL: ${REFRESH_TOKEN_TTL}
      ACCESS_TOKEN_KEY: ${ACCESS_TOKEN_KEY}
      REFRESH_TOKEN_KEY: ${REFRESH_TOKEN_KEY}
    ports:
      - ${GATEWAY_SERVICE_PORT}:${GATEWAY_SERVICE_PORT}

# volumes:
#   app-volume:
#     name: "miku-notes-volume"
